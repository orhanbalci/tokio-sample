!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AndThen	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/and_then.rs	/^pub struct AndThen<A, B, F> where A: Future, B: IntoFuture {$/;"	s
AndThen	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^pub struct AndThen<S, F, U>$/;"	s
Async	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^pub enum Async<T> {$/;"	g
AsyncSink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^pub enum AsyncSink<T> {$/;"	g
BiLock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^pub struct BiLock<T> {$/;"	s
BiLockAcquire	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^pub struct BiLockAcquire<T> {$/;"	s
BiLockAcquired	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^pub struct BiLockAcquired<T> {$/;"	s
BiLockGuard	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^pub struct BiLockGuard<'a, T: 'a> {$/;"	s
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    type BindClient: Service<Request = Self::ServiceRequest,$/;"	T
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^pub trait BindClient<Kind, T: 'static>: 'static {$/;"	t
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type BindClient = ClientService<T, P>;$/;"	T
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type BindClient = ClientService<T, P>;$/;"	T
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type BindClient = ClientProxy<Self::ServiceRequest, Self::ServiceResponse, Self::ServiceError>;$/;"	T
BindClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type BindClient = ClientProxy<Self::ServiceRequest, Self::ServiceResponse, Self::ServiceError>;$/;"	T
BindServer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^pub trait BindServer<Kind, T: 'static>: 'static {$/;"	t
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
Body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^pub struct Body<T, E> {$/;"	s
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type BodyIn;$/;"	T
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type BodyIn = P::RequestBody;$/;"	T
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type BodyIn = P::ResponseBody;$/;"	T
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type BodyIn;$/;"	T
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type BodyIn = P::RequestBody;$/;"	T
BodyIn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type BodyIn = P::ResponseBody;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type BodyOut;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type BodyOut = P::ResponseBody;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type BodyOut = P::RequestBody;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type BodyOut;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type BodyOut = P::ResponseBody;$/;"	T
BodyOut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type BodyOut = P::RequestBody;$/;"	T
BodySender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^type BodySender<B, E> = mpsc::Sender<Result<B, E>>;$/;"	T
BodySender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^type BodySender<B, E> = BufferOne<mpsc::Sender<Result<B, E>>>;$/;"	T
BoxFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    pub type BoxFuture<T, E> = ::std::boxed::Box<Future<Item = T, Error = E> + Send>;$/;"	T
BoxSink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    pub type BoxSink<T, E> = ::std::boxed::Box<Sink<SinkItem = T, SinkError = E> +$/;"	T
BoxStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    pub type BoxStream<T, E> = ::std::boxed::Box<Stream<Item = T, Error = E> + Send>;$/;"	T
Buffer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^pub struct Buffer<S: Sink> {$/;"	s
BufferOne	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^pub struct BufferOne<S: Sink> {$/;"	s
BufferUnordered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^pub struct BufferUnordered<S>$/;"	s
Buffered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^pub struct Buffered<S>$/;"	s
COMPLETE	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^const COMPLETE: usize = 3;      \/\/ No transitions out$/;"	c
Canceled	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^pub struct Canceled;$/;"	s
Canceled	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^pub struct Canceled;$/;"	s
CatchUnwind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^pub struct CatchUnwind<F> where F: Future {$/;"	s
CatchUnwind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^pub struct CatchUnwind<S> where S: Stream {$/;"	s
CatchUnwindState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^enum CatchUnwindState<S> {$/;"	g
Chain	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/chain.rs	/^pub enum Chain<A, B, C> where A: Future {$/;"	g
Chain	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^pub struct Chain<S1, S2> {$/;"	s
Chunks	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^pub struct Chunks<S>$/;"	s
ClientFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^pub struct ClientFuture<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^pub struct ClientFuture<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProxy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^pub struct ClientProxy<R, S, E> {$/;"	s
ClientService	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^pub struct ClientService<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientService	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^pub struct ClientService<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
Codec	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^pub trait Codec {$/;"	t
Collect	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^pub struct Collect<S> where S: Stream {$/;"	s
Connect	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^pub struct Connect<Kind, P> {$/;"	s
Copy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/copy.rs	/^pub struct Copy<R, W> {$/;"	s
Core	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^pub struct Core {$/;"	s
CoreId	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^pub struct CoreId(usize);$/;"	s
Direction	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^enum Direction {$/;"	g
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^pub trait Dispatch {$/;"	t
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^struct Dispatch<P, T, B> where$/;"	s
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^struct Dispatch<S, T, P> where$/;"	s
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^pub trait Dispatch {$/;"	t
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^struct Dispatch<P, T, B> where$/;"	s
Dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^struct Dispatch<S, T, P> where$/;"	s
DispatchSink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^struct DispatchSink<T> {$/;"	s
DispatchSink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^struct DispatchSink<T> {$/;"	s
Drain	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^pub struct Drain<T> {$/;"	s
EasyBuf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^pub struct EasyBuf {$/;"	s
EasyBufMut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^pub struct EasyBufMut<'a> {$/;"	s
Either	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/either.rs	/^pub enum Either<A, B> {$/;"	g
ElemState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^enum ElemState<T> where T: Future {$/;"	g
Empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/empty.rs	/^pub struct Empty<T, E> {$/;"	s
Empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/empty.rs	/^pub struct Empty<T, E> {$/;"	s
Envelope	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^type Envelope<R, S, E> = (R, oneshot::Sender<Result<S, E>>);$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/and_then.rs	/^    type Error = B::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/either.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/empty.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten.rs	/^    type Error = <<A as Future>::Item as IntoFuture>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^    type Error = <F::Item as Stream>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/from_err.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/fuse.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/into_stream.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^    type Error = <I::Item as IntoFuture>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^    type Error = R::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map_err.rs	/^    type Error = U;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^        type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/option.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/or_else.rs	/^    type Error = B::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/poll_fn.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^    type Error = (A::Error, SelectNext<A, B>);$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^    type Error = (A::Error, usize, Vec<A>);$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_ok.rs	/^    type Error = A::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    type Error = SharedError<F::Error>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/then.rs	/^    type Error = B::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^    type Error = S::SinkError;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    type Error = S::SinkError;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    type Error = T::SinkError;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^    type Error = S1::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    type Error = SendError<T, E>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/empty.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    type Error = <S::Item as Stream>::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/for_each.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    type Error = T::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/future.rs	/^    type Error = (S::Error, S);$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/iter.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    type Error = U;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^    type Error = S1::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^        type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    type Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/once.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    type Error = U::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/repeat.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/select.rs	/^    type Error = S1::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    type Error = U::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^    type Error = Fut::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/zip.rs	/^    type Error = S1::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    type Error = ();$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    type Error = ();$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    type Error = ();$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/copy.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/flush.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^    type Error = ::std::io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Error = F::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Error = P::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Error = P::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Error = P::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Error = P::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^    type Error = io::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    type Error = E;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error = R::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error = S::Error;$/;"	T
Error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error;$/;"	T
EventSet	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub trait EventSet: Send + Sync + 'static {$/;"	t
Events	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^enum Events {$/;"	g
Exchange	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^struct Exchange<T: Dispatch> {$/;"	s
Executor	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub trait Executor: Send + Sync + 'static {$/;"	t
Filter	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^pub struct Filter<S, F> {$/;"	s
FilterMap	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^pub struct FilterMap<S, F> {$/;"	s
Flatten	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten.rs	/^pub struct Flatten<A> where A: Future, A::Item: IntoFuture {$/;"	s
Flatten	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^pub struct Flatten<S>$/;"	s
FlattenStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^pub struct FlattenStream<F>$/;"	s
Flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^pub struct Flush<S> {$/;"	s
Flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/flush.rs	/^pub struct Flush<A> {$/;"	s
FnBox	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^trait FnBox: Send + 'static {$/;"	t
Fold	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^pub struct Fold<S, F, Fut, T> where Fut: IntoFuture {$/;"	s
ForEach	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/for_each.rs	/^pub struct ForEach<S, F, U> where U: IntoFuture {$/;"	s
Forward	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^pub struct Forward<T: Stream, U> {$/;"	s
Frame	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame.rs	/^pub enum Frame<T, B, E> {$/;"	g
Frame	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/frame.rs	/^pub enum Frame<T, B, E> {$/;"	g
FrameBuf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^pub struct FrameBuf<T> {$/;"	s
FrameDeque	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^pub struct FrameDeque<T> {$/;"	s
Framed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^pub struct Framed<T, C> {$/;"	s
FramedIo	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^pub trait FramedIo {$/;"	t
FromErr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/from_err.rs	/^pub struct FromErr<A, E> where A: Future {$/;"	s
Fuse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/fuse.rs	/^pub struct Fuse<A: Future> {$/;"	s
Fuse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^pub struct Fuse<S> {$/;"	s
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            type Future = $Join<A::Future, $($B::Future),*>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Future = F;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Future = FutureResult<T, E>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Future: Future<Item=Self, Error=Self::Error>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Future: Future<Item=Self::Item, Error=Self::Error>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^pub trait Future {$/;"	t
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Future = ClientFuture<T, P>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Future = LiftFuture<S::Future, stream::Empty<(), S::Error>>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Future = ClientFuture<T, P>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Future = LiftFuture<S::Future, stream::Empty<(), S::Error>>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    type Future = Response<S, E>;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Future = S::Future;$/;"	T
Future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Future: Future<Item = Self::Response, Error = Self::Error>;$/;"	T
FutureFrom	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^pub trait FutureFrom<T>: Sized {$/;"	t
FutureResult	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^pub struct FutureResult<T, E> {$/;"	s
FutureSender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^pub struct FutureSender<T, E> {$/;"	s
FuturesUnordered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^pub struct FuturesUnordered<F>$/;"	s
Handle	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^pub struct Handle {$/;"	s
Heap	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^pub struct Heap<T> {$/;"	s
INITIAL_BLOCK_SIZE	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^const INITIAL_BLOCK_SIZE: usize = 32;$/;"	c
INIT_STATE	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^const INIT_STATE: usize = OPEN_MASK;$/;"	c
IdHasher	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^pub struct IdHasher {$/;"	s
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type In;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    type In;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type In;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type In;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type In = P::Request;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type In = P::Response;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type In;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type In = P::Request;$/;"	T
In	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type In = P::Response;$/;"	T
InFlight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^enum InFlight<F: Future> {$/;"	g
InFlight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^enum InFlight<F: Future> {$/;"	g
Incoming	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^pub struct Incoming {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^struct Inner<F: Future> {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^struct Inner<T> {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^struct Inner<T> {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^struct Inner {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^struct Inner {$/;"	s
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^enum Inner<T, E> {$/;"	g
Inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^struct Inner<T> {$/;"	s
Instance	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance = R;$/;"	T
Instance	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance = S::Instance;$/;"	T
Instance	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance: Service<Request = Self::Request, Response = Self::Response, Error = Self::Error>;$/;"	T
Interval	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^pub struct Interval {$/;"	s
IntoFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^pub trait IntoFuture {$/;"	t
IntoStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/into_stream.rs	/^pub struct IntoStream<F: Future> {$/;"	s
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^pub trait Io: io::Read + io::Write {$/;"	t
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Io;$/;"	T
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Io = T;$/;"	T
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Io = T;$/;"	T
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Io;$/;"	T
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Io = T;$/;"	T
Io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Io = T;$/;"	T
IoFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^pub type IoFuture<T> = BoxFuture<T, io::Error>;$/;"	T
IoStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^pub type IoStream<T> = BoxStream<T, io::Error>;$/;"	T
IoToken	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^pub struct IoToken {$/;"	s
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/and_then.rs	/^    type Item = B::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    type Item = F::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    type Item = Result<F::Item, F::Error>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/either.rs	/^    type Item = A::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/empty.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten.rs	/^    type Item = <<A as Future>::Item as IntoFuture>::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^    type Item = <F::Item as Stream>::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/from_err.rs	/^    type Item = A::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/fuse.rs	/^    type Item = A::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/into_stream.rs	/^    type Item = F::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            type Item = (A::Item, $($B::Item),*);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^    type Item = Vec<<I::Item as IntoFuture>::Item>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^    type Item = R::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map.rs	/^    type Item = U;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map_err.rs	/^    type Item = A::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^        type Item = F::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Item = F::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    type Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/option.rs	/^    type Item = Option<T>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/or_else.rs	/^    type Item = B::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/poll_fn.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^    type Item = (A::Item, SelectNext<A, B>);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^    type Item = A::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^    type Item = (A::Item, usize, Vec<A>);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_ok.rs	/^    type Item = (A::Item, Vec<A>);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    type Item = SharedItem<F::Item>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/then.rs	/^    type Item = B::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^    type Item = S;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    type Item = S;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    type Item = (T, U);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    type Item = U::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^    type Item = S1::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    type Item = Sender<T, E>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    type Item = Vec<<S as Stream>::Item>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^    type Item = Vec<S::Item>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/empty.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    type Item = B;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    type Item = <S::Item as Stream>::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/for_each.rs	/^    type Item = ();$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    type Item = (T, U);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/future.rs	/^    type Item = (Option<S::Item>, S);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^    type Item = F::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/iter.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    type Item = U;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^    type Item = MergedItem<S1::Item, S2::Item>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^        type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    type Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/once.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/repeat.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/select.rs	/^    type Item = S1::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    type Item = U::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^    type Item = It;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/wait.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/zip.rs	/^    type Item = (S1::Item, S2::Item);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    type Item = BiLockAcquired<T>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/copy.rs	/^    type Item = u64;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/flush.rs	/^    type Item = A;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type Item = C::In;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^    type Item = (R, T, usize);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^    type Item = (A, T);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^    type Item = (A, T);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    type Item = (TcpStream, SocketAddr);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    type Item = TcpStream;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type Item = C::In;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    type Item = (UdpSocket, T);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    type Item = (UdpSocket, T, usize, SocketAddr);$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    type Item = ();$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    type Item = ();$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    type Item = S::Item;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Item = P::Response;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        type Item = Frame<InnerItem, (), E>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        type Item = LiftTransport<F::Item, E>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Item = Message<F::Item, T>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Item = P::Response;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        type Item = Frame<T::Item, (), E>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        type Item = LiftTransport<F::Item, E>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Item = Message<F::Item, T>;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    type Item = T;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Item = ();$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Item = ();$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^    type Item = P::BindClient;$/;"	T
Item	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    type Item = T;$/;"	T
IterStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/iter.rs	/^pub struct IterStream<I> {$/;"	s
JoinAll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^pub struct JoinAll<I>$/;"	s
Lazy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^pub struct Lazy<F, R: IntoFuture> {$/;"	s
LiftBind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^    pub struct LiftBind<A, F, E> {$/;"	s
LiftBind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^    pub struct LiftBind<A, F, E> {$/;"	s
LiftFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^struct LiftFuture<F, T>(F, marker::PhantomData<fn() -> T>);$/;"	s
LiftFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^struct LiftFuture<F, T>(F, marker::PhantomData<fn() -> T>);$/;"	s
LiftProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/mod.rs	/^struct LiftProto<P>(P);$/;"	s
LiftService	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^struct LiftService<S>(S);$/;"	s
LiftService	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^struct LiftService<S>(S);$/;"	s
LiftTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^    pub struct LiftTransport<T, E>(pub T, pub PhantomData<E>);$/;"	s
LiftTransport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^    pub struct LiftTransport<T, E>(pub T, pub PhantomData<E>);$/;"	s
LocalKey	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^pub struct LocalKey<T> {$/;"	s
LocalMap	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^pub type LocalMap = RefCell<HashMap<TypeId,$/;"	T
Lock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^pub struct Lock<T> {$/;"	s
Loop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^pub enum Loop<T, S> {$/;"	g
LoopFn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^pub struct LoopFn<A, F> where A: IntoFuture {$/;"	s
MAX_BLOCKS	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^const MAX_BLOCKS: usize = 16;$/;"	c
MAX_BUFFER	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^const MAX_BUFFER: usize = MAX_CAPACITY >> 1;$/;"	c
MAX_BUFFERED_FRAMES	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^const MAX_BUFFERED_FRAMES: usize = 128;$/;"	c
MAX_CAPACITY	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^const MAX_CAPACITY: usize = !(OPEN_MASK);$/;"	c
MAX_CAPACITY	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^const MAX_CAPACITY: usize = 1_048_576;$/;"	c
MAX_IN_FLIGHT_REQUESTS	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^const MAX_IN_FLIGHT_REQUESTS: usize = 32;$/;"	c
Map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map.rs	/^pub struct Map<A, F> where A: Future {$/;"	s
Map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^pub struct Map<S, F> {$/;"	s
MapErr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map_err.rs	/^pub struct MapErr<A, F> where A: Future {$/;"	s
MapErr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^pub struct MapErr<S, F> {$/;"	s
MaybeDone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^enum MaybeDone<A: Future> {$/;"	g
Merge	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^pub struct Merge<S1, S2: Stream> {$/;"	s
MergedItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^pub enum MergedItem<I1, I2> {$/;"	g
Message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^enum Message {$/;"	g
Message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^pub enum Message<T, B> {$/;"	g
Multiplex	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^pub struct Multiplex;$/;"	s
Multiplex	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^pub struct Multiplex<T> where T: Dispatch {$/;"	s
MultiplexMessage	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^pub struct MultiplexMessage<T, B, E> {$/;"	s
MySetReadiness	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^struct MySetReadiness(mio::SetReadiness);$/;"	s
MyStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
NEXT_ID	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NEXT_LOOP_ID	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^static NEXT_LOOP_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NewService	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^pub trait NewService {$/;"	t
Node	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^struct Node<T> {$/;"	s
Node	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^struct Node<T> {$/;"	s
OPEN_MASK	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^const OPEN_MASK: usize = 1 << 31;$/;"	c
Once	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/once.rs	/^pub struct Once<T, E>(stream::IterStream<core::iter::Once<Result<T, E>>>);$/;"	s
OneOf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^enum OneOf<A, B> where A: Future, B: Future {$/;"	g
Opaque	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^pub trait Opaque: Send {}$/;"	t
OrElse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/or_else.rs	/^pub struct OrElse<A, B, F> where A: Future, B: IntoFuture {$/;"	s
OrElse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^pub struct OrElse<S, F, U>$/;"	s
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type Out;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    type Out;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type Out;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Out;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Out = P::Response;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Out = P::Request;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Out;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Out = P::Response;$/;"	T
Out	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Out = P::Request;$/;"	T
POLLING	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^const POLLING: usize = 1;       \/\/ --> WAITING, REPOLL, or COMPLETE$/;"	c
Pair	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^pub type Pair<R, S, E> = (ClientProxy<R, S, E>, Receiver<R, S, E>);$/;"	T
Peekable	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^pub struct Peekable<S: Stream> {$/;"	s
Pipeline	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^pub struct Pipeline;$/;"	s
Pipeline	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^pub struct Pipeline<T> where T: Dispatch {$/;"	s
PipelineMessage	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^pub type PipelineMessage<T, B, E> = Result<Message<T, B>, E>;$/;"	T
Poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^pub type Poll<T, E> = Result<Async<T>, E>;$/;"	T
PollEvented	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^pub struct PollEvented<E> {$/;"	s
PollFn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PopResult	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^pub enum PopResult<T> {$/;"	g
Queue	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^pub struct Queue<T> {$/;"	s
REPOLL	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^const REPOLL: usize = 2;        \/\/ --> POLLING$/;"	c
Read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^pub struct Read<R, T> {$/;"	s
ReadExact	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^pub struct ReadExact<A, T> {$/;"	s
ReadHalf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^pub struct ReadHalf<T> {$/;"	s
ReadToEnd	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^pub struct ReadToEnd<A> {$/;"	s
ReadUntil	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^pub struct ReadUntil<A> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^pub struct Receiver<T, E> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^pub type Receiver<R, S, E> = mpsc::UnboundedReceiver<io::Result<Envelope<R, S, E>>>;$/;"	T
ReceiverTask	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^struct ReceiverTask {$/;"	s
RecvDgram	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^pub struct RecvDgram<T> {$/;"	s
RecvState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^enum RecvState<T> {$/;"	g
Remote	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^pub struct Remote {$/;"	s
Repeat	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/repeat.rs	/^pub struct Repeat<T, E>$/;"	s
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Request = P::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Request = P::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Request = streaming::Message<S::Request, streaming::Body<(), S::Error>>;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Request = P::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Request = P::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Request = streaming::Message<S::Request, streaming::Body<(), S::Error>>;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^enum Request<T: Dispatch> {$/;"	g
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Request: 'static;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    type Request = R;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request = R::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request = S::Request;$/;"	T
Request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request;$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type RequestBody: 'static;$/;"	T
RequestId	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^pub type RequestId = u64;$/;"	T
RequestId	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^pub type RequestId = u64;$/;"	T
Reset	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    struct Reset((*const Task, *const data::LocalMap));$/;"	s
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Response = P::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Response = P::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Response = streaming::Message<S::Response, MyStream<S::Error>>;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Response = P::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Response = P::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Response = streaming::Message<S::Response, MyStream<S::Error>>;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Response: 'static;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    type Response = S;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^pub struct Response<T, E> {$/;"	s
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response = R::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response = S::Response;$/;"	T
Response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response;$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type ResponseBody: 'static;$/;"	T
Run	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub struct Run {$/;"	s
ScheduledIo	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^struct ScheduledIo {$/;"	s
ScheduledTask	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^struct ScheduledTask {$/;"	s
Select	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^pub struct Select<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
Select	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/select.rs	/^pub struct Select<S1, S2> {$/;"	s
SelectAll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^pub struct SelectAll<A> where A: Future {$/;"	s
SelectAllNext	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^pub type SelectAllNext<A> = A;$/;"	T
SelectNext	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^pub struct SelectNext<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
SelectOk	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_ok.rs	/^pub struct SelectOk<A> where A: Future {$/;"	s
Send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^pub struct Send<S: Sink> {$/;"	s
SendAll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^pub struct SendAll<T, U: Stream> {$/;"	s
SendDgram	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^pub struct SendDgram<T> {$/;"	s
SendError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^pub struct SendError<T, E>(Result<T, E>);$/;"	s
SendError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub struct SendError<T>(T);$/;"	s
SendError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub struct SendError<T>(T);$/;"	s
SendState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^enum SendState<T> {$/;"	g
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^pub struct Sender<T, E> {$/;"	s
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^pub struct Sender<T> {$/;"	s
SenderTask	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^type SenderTask = Arc<Mutex<Option<Task>>>;$/;"	T
ServerProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
Service	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^pub trait Service {$/;"	t
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    type ServiceError;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    type ServiceRequest;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type ServiceRequest = Message<P::Request, B>;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type ServiceRequest = Message<P::Request, Body<P::RequestBody, P::Error>>;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type ServiceRequest = Message<P::Request, B>;$/;"	T
ServiceRequest	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type ServiceRequest = Message<P::Request, Body<P::RequestBody, P::Error>>;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    type ServiceResponse;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type ServiceResponse = Message<P::Response, Body<P::ResponseBody, P::Error>>;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type ServiceResponse = Message<P::Response, B>;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type ServiceResponse = Message<P::Response, Body<P::ResponseBody, P::Error>>;$/;"	T
ServiceResponse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type ServiceResponse = Message<P::Response, B>;$/;"	T
Set	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    struct Set(Rc<Cell<usize>>, usize);$/;"	s
Shared	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^pub struct Shared<F: Future> {$/;"	s
Shared	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^struct Shared<T> {$/;"	s
SharedError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^pub struct SharedError<E> {$/;"	s
SharedItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^pub struct SharedItem<T> {$/;"	s
Sink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^pub trait Sink {$/;"	t
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        type SinkError = (); \/\/ Change this to ! once it stabilizes$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    type SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    type SinkError = Fut::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type SinkError = io::Error;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        type SinkItem = T;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    type SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    type SinkItem = U;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type SinkItem = C::Out;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    type SinkItem = C::Out;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        type SinkItem = Frame<InnerSink, (), E>;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        type SinkItem = Frame<T::SinkItem, (), E>;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type SinkItem = <T::Transport as Sink>::SinkItem;$/;"	T
SinkItem	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type SinkItem = <T::Transport as Sink>::SinkItem;$/;"	T
Skip	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^pub struct Skip<S> {$/;"	s
SkipWhile	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^pub struct SkipWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Slot	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^enum Slot<T> {$/;"	g
Slot	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^pub struct Slot {$/;"	s
Slot	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^struct Slot<T> {$/;"	s
Spawn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub struct Spawn<T> {$/;"	s
SplitSink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^pub struct SplitSink<S>(BiLock<S>);$/;"	s
SplitStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^pub struct SplitStream<S>(BiLock<S>);$/;"	s
Stack	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^pub struct Stack<T> {$/;"	s
StartSend	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^pub type StartSend<T, E> = Result<AsyncSink<T>, E>;$/;"	T
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^enum State<F>$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^enum State<F: Future> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^enum State<Fut, T> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^enum State<S: Future> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^enum State<S1, S2> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^struct State {$/;"	s
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^enum State<T> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^enum State<T> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^enum State<R, T> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^enum State<A, T> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^enum State<A> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^enum State<A> {$/;"	g
State	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^enum State<A, T> {$/;"	g
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^pub trait Stream {$/;"	t
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Stream: Stream<Item = Self::BodyIn, Error = Self::Error>;$/;"	T
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Stream = B;$/;"	T
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Stream = B;$/;"	T
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Stream: Stream<Item = Self::BodyIn, Error = Self::Error>;$/;"	T
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Stream = B;$/;"	T
Stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Stream = B;$/;"	T
StreamFuture	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/future.rs	/^pub struct StreamFuture<S> {$/;"	s
StreamingMultiplex	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^pub struct StreamingMultiplex<B>(B);$/;"	s
StreamingPipeline	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/mod.rs	/^pub struct StreamingPipeline<B>(B);$/;"	s
TOKEN_FUTURE	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^const TOKEN_FUTURE: mio::Token = mio::Token(1);$/;"	c
TOKEN_MESSAGES	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^const TOKEN_MESSAGES: mio::Token = mio::Token(0);$/;"	c
TOKEN_START	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^const TOKEN_START: usize = 2;$/;"	c
Take	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^pub struct Take<S> {$/;"	s
TakeWhile	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^pub struct TakeWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    type Target = E;$/;"	T
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    type Target = T;$/;"	T
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    type Target = T;$/;"	T
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    type Target = T;$/;"	T
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    type Target = Vec<u8>;$/;"	T
Target	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    type Target = T;$/;"	T
Task	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub struct Task {$/;"	s
TaskRc	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/task_rc.rs	/^pub struct TaskRc<A> {$/;"	s
TcpClient	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^pub struct TcpClient<Kind, P> {$/;"	s
TcpListener	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^pub struct TcpListener {$/;"	s
TcpServer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^pub struct TcpServer<Kind, P> {$/;"	s
TcpStream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^pub struct TcpStream {$/;"	s
TcpStreamNew	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^pub struct TcpStreamNew {$/;"	s
TcpStreamNewState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^enum TcpStreamNewState {$/;"	g
Then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/then.rs	/^pub struct Then<A, B, F> where A: Future, B: IntoFuture {$/;"	s
Then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^pub struct Then<S, F, U>$/;"	s
ThreadUnpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^struct ThreadUnpark {$/;"	s
Timeline	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    struct Timeline(Instant);$/;"	s
Timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^pub struct Timeout {$/;"	s
TimeoutState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^enum TimeoutState {$/;"	g
TimeoutToken	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout_token.rs	/^pub struct TimeoutToken {$/;"	s
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    type Transport: 'static +$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    type Transport: 'static +$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    type Transport: 'static +$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    type Transport: 'static +$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    type Transport: Transport<Self::BodyOut,$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^        type Transport = P::Transport;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    type Transport:$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^pub trait Transport<ReadBody>: 'static +$/;"	t
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    type Transport:$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    type Transport: Transport<Item = Frame<Self::Out, Self::BodyOut, Self::Error>,$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    type Transport:$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/mod.rs	/^pub trait Transport: 'static +$/;"	t
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    type Transport:$/;"	T
TryLock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^pub struct TryLock<'a, T: 'a> {$/;"	s
TryPark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^enum TryPark {$/;"	g
UdpCodec	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^pub trait UdpCodec {$/;"	t
UdpFramed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^pub struct UdpFramed<C> {$/;"	s
UdpSocket	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^pub struct UdpSocket {$/;"	s
UnboundedReceiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedReceiver	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedSender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
UnboundedSender	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
Unfold	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^pub struct Unfold<T, F, Fut> where Fut: IntoFuture {$/;"	s
Unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub trait Unpark: Send + Sync {$/;"	t
UnparkEvent	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub struct UnparkEvent {$/;"	s
UnparkMutex	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^pub struct UnparkMutex<D> {$/;"	s
Unparker	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^struct Unparker {$/;"	s
UnparkerInner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^struct UnparkerInner {$/;"	s
WAITING	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^const WAITING: usize = 0;       \/\/ --> POLLING$/;"	c
Wait	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/wait.rs	/^pub struct Wait<S> {$/;"	s
Window	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^pub struct Window<T> {$/;"	s
With	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^pub struct With<S, U, F, Fut>$/;"	s
WriteAll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^pub struct WriteAll<A, T> {$/;"	s
WriteHalf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^pub struct WriteHalf<T> {$/;"	s
WriteState	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^enum WriteState {$/;"	g
Zip	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/zip.rs	/^pub struct Zip<S1: Stream, S2: Stream> {$/;"	s
_Lazy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^enum _Lazy<F, R> {$/;"	g
__A	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^                struct __A;$/;"	s
__init	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^            fn __init() -> $t { $e }$/;"	f
__key	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^            fn __key() -> ::std::any::TypeId {$/;"	f
_assert_clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn _assert_clone<T: Clone>() {}$/;"	f
_assert_kinds	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^fn _assert_kinds() {$/;"	f
_assert_kinds	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^fn _assert_kinds() {$/;"	f
_assert_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn _assert_send<T: Send>() {}$/;"	f
_assert_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn _assert_send<T: Send>() {}$/;"	f
_assert_sync	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn _assert_sync<T: Sync>() {}$/;"	f
accept	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn accept(&mut self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	f
add_source	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn add_source(&mut self, source: &mio::Evented)$/;"	f
add_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn add_timeout(&mut self, at: Instant) -> usize {$/;"	f
addr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^    pub fn addr(&mut self, addr: SocketAddr) {$/;"	f
allocated	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn allocated(&self) -> usize {$/;"	f
and_then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn and_then<F, B>(self, f: F) -> AndThen<Self, B, F>$/;"	f
and_then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn and_then<F, U>(self, f: F) -> AndThen<Self, F, U>$/;"	f
as_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_raw_fd	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	f
as_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_slice	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
assert_consistent	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn assert_consistent(&self) {$/;"	f
assert_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^fn assert_future<A, B, F>(t: F) -> F$/;"	f
assert_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^fn assert_send<T>(s: &mut T, item: T::SinkItem) -> Result<(), T::SinkError>$/;"	f
assert_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^fn assert_send<S: Sink>(s: &mut S, item: S::SinkItem) -> Result<(), S::SinkError> {$/;"	f
at	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^        fn at(&self, millis: u64) -> Instant {$/;"	f
at_ns	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^        fn at_ns(&self, sec: u64, nanos: u32) -> Instant {$/;"	f
bind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn bind(addr: &SocketAddr, handle: &Handle) -> io::Result<TcpListener> {$/;"	f
bind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn bind(addr: &SocketAddr, handle: &Handle) -> io::Result<UdpSocket> {$/;"	f
bind_client	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient;$/;"	f
bind_client	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_server	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/lib.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
block	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn block(&mut self, handle: Task) -> Option<Task> {$/;"	f
boxed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn boxed(self) -> BoxFuture<Self::Item, Self::Error>$/;"	f
boxed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn boxed(self) -> BoxStream<Self::Item, Self::Error>$/;"	f
broadcast	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
broken_pipe	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^fn broken_pipe() -> io::Error {$/;"	f
broken_pipe	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^fn broken_pipe() -> io::Error {$/;"	f
buffer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn buffer(self, amt: usize) -> Buffer<Self>$/;"	f
buffer_unordered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn buffer_unordered(self, amt: usize) -> BufferUnordered<Self>$/;"	f
buffered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn buffered(self, amt: usize) -> Buffered<Self>$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn call(&self, req: P::Request) -> Self::Future {$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    fn call(&self, req: Self::Request) -> Self::Future {$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn call(&self, req: P::Request) -> Self::Future {$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    fn call(&self, req: Self::Request) -> Self::Future {$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    fn call(&self, request: R) -> Self::Future {$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn call(&self, req: Self::Request) -> Self::Future;$/;"	f
call	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn call(&self, request: S::Request) -> S::Future {$/;"	f
call_box	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn call_box(self: Box<Self>, lp: &Core) {$/;"	f
call_box	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn call_box(self: Box<Self>, lp: &Core);$/;"	f
cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn cancel(&mut self, request_id: RequestId) -> io::Result<()>;$/;"	f
cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn cancel(&mut self, _request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^    fn cancel(&mut self, request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn cancel(&mut self, _request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/mod.rs	/^    fn cancel(&mut self) -> io::Result<()> {$/;"	f
cancel_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn cancel_timeout(&mut self, token: usize) {$/;"	f
cancel_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout_token.rs	/^    pub fn cancel_timeout(&self, handle: &Remote) {$/;"	f
capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
catch_unwind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
catch_unwind	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
chain	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn chain<S>(self, other: S) -> Chain<Self, S>$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^pub fn channel<T, E>() -> (Sender<T, E>, Receiver<T, E>) {$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^pub fn channel<T>(handle: &Handle) -> io::Result<(Sender<T>, Receiver<T>)>$/;"	f
channel2	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^fn channel2<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
channel_	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^fn channel_<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
check_out_body_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn check_out_body_stream(&mut self) -> bool {$/;"	f
check_to_vec	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn check_to_vec(mut data: Vec<i32>) {$/;"	f
chunks	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn chunks(self, capacity: usize) -> Chunks<Self>$/;"	f
clear	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn clear(&mut self) {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> UnboundedSender<T> {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/task_rc.rs	/^    fn clone(&self) -> TaskRc<A> {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    fn clone(&self) -> Self {$/;"	f
close	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    pub fn close(&mut self) {$/;"	f
close	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
close	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    pub fn close(&mut self) {$/;"	f
close	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
collect	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn collect(self) -> Collect<Self>$/;"	f
complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    pub fn complete(self, t: T) {$/;"	f
complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn complete(&self) {$/;"	f
complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    pub fn complete(self, val: T) {$/;"	f
configure_tcp	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^fn configure_tcp(workers: usize, _tcp: &net2::TcpBuilder) -> io::Result<()> {$/;"	f
configure_tcp	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^fn configure_tcp(workers: usize, tcp: &net2::TcpBuilder) -> io::Result<()> {$/;"	f
connect	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn connect(addr: &SocketAddr, handle: &Handle) -> TcpStreamNew {$/;"	f
connect	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^    pub fn connect(&self, addr: &SocketAddr, handle: &Handle) -> Connect<Kind, P> {$/;"	f
connect_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn connect_stream(stream: net::TcpStream,$/;"	f
consume_queue	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn consume_queue(&self) {$/;"	f
consume_timeouts	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn consume_timeouts(&mut self, now: Instant) {$/;"	f
copy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/copy.rs	/^pub fn copy<R, W>(reader: R, writer: W) -> Copy<R, W>$/;"	f
debug_empty_easybuf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn debug_empty_easybuf() {$/;"	f
debug_large_easybuf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn debug_large_easybuf() {$/;"	f
debug_small_easybuf	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn debug_small_easybuf() {$/;"	f
debug_small_easybuf_split	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn debug_small_easybuf_split() {$/;"	f
dec_num_messages	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn dec_num_messages(&self) {$/;"	f
decode	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn decode(&mut self, buf: &mut EasyBuf) -> io::Result<Option<Self::In>>;$/;"	f
decode	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    fn decode(&mut self, src: &SocketAddr, buf: &[u8]) -> io::Result<Self::In>;$/;"	f
decode_eof	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn decode_eof(&mut self, buf: &mut EasyBuf) -> io::Result<Self::In> {$/;"	f
decode_state	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^fn decode_state(num: usize) -> State {$/;"	f
default	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^    fn default() -> IdHasher {$/;"	f
deque	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn deque(&self) -> FrameDeque<T> {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn deref(&self) -> &E {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn deref(&self) -> &Vec<u8> {$/;"	f
deref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    fn deref(&self) -> &T {$/;"	f
deref_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn deref_mut(&mut self) -> &mut Vec<u8> {$/;"	f
deref_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deregister	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn deregister(self, handle: &Handle) -> io::Result<()> {$/;"	f
deregister_source	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn deregister_source(&mut self, source: &mio::Evented) -> io::Result<()> {$/;"	f
description	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn description(&self) -> &str {$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn dispatch(&mut self, token: mio::Token, ready: mio::Ready) {$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()>;$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()> {$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()> {$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn dispatch(&mut self, message: PipelineMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()>;$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn dispatch(&mut self,$/;"	f
dispatch	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn dispatch(&mut self,$/;"	f
dispatch_io	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn dispatch_io(&mut self, token: usize, ready: mio::Ready) {$/;"	f
dispatch_made_progress	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn dispatch_made_progress(&mut self) {$/;"	f
dispatch_task	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn dispatch_task(&mut self, token: usize) {$/;"	f
dispatching_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^    fn dispatching_body(&mut self, id: RequestId, body: &ReadBody) {$/;"	f
do_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn do_send(&mut self, msg: Option<T>, can_park: bool) -> Result<(), SendError<T>> {$/;"	f
do_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn do_send(&self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
do_send_nb	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn do_send_nb(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
drain	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    pub fn drain(&self) -> Drain<T> {$/;"	f
drain_drops	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn drain_drops() {$/;"	f
drain_to	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn drain_to(&mut self, at: usize) -> EasyBuf {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^        fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^        fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn drop(&mut self) {$/;"	f
drop_drops	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn drop_drops() {$/;"	f
drop_source	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^    pub fn drop_source(&self, handle: &Remote) {$/;"	f
drop_source	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn drop_source(&mut self, token: usize) {$/;"	f
dur	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn dur(millis: u64) -> Duration {$/;"	f
duration_to_nanos	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^fn duration_to_nanos(dur: Duration) -> Option<u64> {$/;"	f
empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    pub fn empty() -> Body<T, E> {$/;"	f
encode	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn encode(&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> io::Result<()>;$/;"	f
encode	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    fn encode(&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> SocketAddr;$/;"	f
encode_state	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^fn encode_state(state: &State) -> usize {$/;"	f
end	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn end(&self) -> usize {$/;"	f
enter	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn enter<F, R>(&mut self, unpark: Arc<Unpark>, f: F) -> R$/;"	f
eof	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^fn eof() -> io::Error {$/;"	f
eq	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    fn eq(&self, other: &T) -> bool {$/;"	f
erase	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            fn erase(&mut self) {$/;"	f
err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^pub fn err<T, E>(e: E) -> FutureResult<T, E> {$/;"	f
error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    pub fn error(id: RequestId, error: E) -> MultiplexMessage<T, B, E> {$/;"	f
execute	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn execute(&self, r: Run);$/;"	f
execute	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn execute(self, exec: Arc<Executor>)$/;"	f
fast_forward	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn fast_forward() {$/;"	f
filter	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn filter<F>(self, f: F) -> Filter<Self, F>$/;"	f
filter_map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn filter_map<F, B>(self, f: F) -> FilterMap<Self, F>$/;"	f
finish	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^    fn finish(&mut self) -> Vec<S::Item> {$/;"	f
finish	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^    fn finish(&self) -> u64 {$/;"	f
fire	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn fire(&mut self) -> Option<Task> {$/;"	f
flatten	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn flatten_stream(self) -> FlattenStream<Self>$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn flush(self) -> Flush<Self>$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/flush.rs	/^pub fn flush<A>(a: A) -> Flush<A>$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn flush(&mut self) -> Poll<(), io::Error>;$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush_dispatch_deque	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn flush_dispatch_deque(&mut self) -> io::Result<()> {$/;"	f
flush_out_bodies	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn flush_out_bodies(&mut self) -> io::Result<()> {$/;"	f
flush_out_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn flush_out_body(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fold	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn fold<F, T, Fut>(self, init: T, f: F) -> Fold<Self, F, Fut, T>$/;"	f
for_each	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn for_each<F, U>(self, f: F) -> ForEach<Self, F, U>$/;"	f
forward	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn forward<S>(self, sink: S) -> Forward<Self, S>$/;"	f
framed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^pub fn framed<T, C>(io: T, codec: C) -> Framed<T, C> {$/;"	f
framed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn framed<C: Codec>(self, codec: C) -> Framed<Self, C>$/;"	f
framed	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn framed<C: UdpCodec>(self, codec: C) -> UdpFramed<C> {$/;"	f
fresh_task_id	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^fn fresh_task_id() -> usize {$/;"	f
from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^    fn from(t: T) -> Async<T> {$/;"	f
from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn from(vec: Vec<u8>) -> EasyBuf {$/;"	f
from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    fn from(src: mpsc::Receiver<Result<T, E>>) -> Body<T, E> {$/;"	f
from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    fn from(val: T) -> Body<T, E> {$/;"	f
from_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn from_err<E:From<Self::Error>>(self) -> FromErr<Self, E>$/;"	f
from_listener	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn from_listener(listener: net::TcpListener,$/;"	f
from_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/mod.rs	/^    fn from_ref(proto: &P) -> &LiftProto<P> {$/;"	f
from_socket	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn from_socket(socket: net::UdpSocket,$/;"	f
fuse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
fuse	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
future_from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn future_from(T) -> Self::Future;$/;"	f
futures_unordered	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^pub fn futures_unordered<I>(futures: I) -> FuturesUnordered<<I::Item as IntoFuture>::Future>$/;"	f
generate	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^macro_rules! generate {$/;"	d
get	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^    fn get(&mut self) -> &mut R::Future {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn get_mut(&mut self) -> EasyBufMut {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    pub fn get_mut(&mut self) -> &mut UdpSocket {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn get_mut(&mut self) -> &mut E {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    pub fn get_ref(&self) -> &UdpSocket {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn get_ref(&self) -> &E {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
grow	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn grow(&mut self) -> bool {$/;"	f
handle	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn handle(&self) -> Handle {$/;"	f
handle	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn handle(&self) -> Option<Handle> {$/;"	f
has_in_flight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
has_in_flight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn has_in_flight(&self) -> bool;$/;"	f
has_in_flight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
has_in_flight	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
id	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn id(&self) -> CoreId {$/;"	f
if_std	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lib.rs	/^macro_rules! if_std {$/;"	d
inc_num_messages	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn inc_num_messages(&self, close: bool) -> Option<bool> {$/;"	f
incoming	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn incoming(self) -> Incoming {$/;"	f
incomplete_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^fn incomplete_write(reason: &str) -> io::Error {$/;"	f
insert	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn insert(&mut self, idx: u64, task: task::Task) {$/;"	f
insert	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn insert(&self, _id: usize) {$/;"	f
insert	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn insert(&self, id: usize) {$/;"	f
insert	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn insert(&self, id: usize);$/;"	f
into_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            fn into_future(self) -> Self::Future {$/;"	f
into_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn into_future(self) -> F {$/;"	f
into_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn into_future(self) -> FutureResult<T, E> {$/;"	f
into_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn into_future(self) -> Self::Future;$/;"	f
into_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn into_future(self) -> StreamFuture<Self>$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    pub fn into_inner(self) -> UdpSocket {$/;"	f
into_inner	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn into_stream(self) -> IntoStream<Self>$/;"	f
is_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_complete(&self) -> bool {$/;"	f
is_current	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn is_current(&self) -> bool {$/;"	f
is_dispatched	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_dispatched(&self) -> bool {$/;"	f
is_done	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_done	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_inbound	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_inbound(&self) -> bool {$/;"	f
is_none	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_none(&self) -> bool {$/;"	f
is_not_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^    pub fn is_not_ready(&self) -> bool {$/;"	f
is_outbound	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn is_outbound(&self) -> bool {$/;"	f
is_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^    pub fn is_ready(&self) -> bool {$/;"	f
is_wouldblock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^fn is_wouldblock<T>(r: &io::Result<T>) -> bool {$/;"	f
iter	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/iter.rs	/^pub fn iter<J, T, E>(i: J) -> IterStream<J::IntoIter>$/;"	f
join	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn join<B>(self, other: B) -> Join<Self, B::Future>$/;"	f
join3	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn join3<B, C>(self, b: B, c: C) -> Join3<Self, B::Future, C::Future>$/;"	f
join4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn join4<B, C, D>(self, b: B, c: C, d: D)$/;"	f
join5	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn join5<B, C, D, E>(self, b: B, c: C, d: D, e: E)$/;"	f
join_all	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^pub fn join_all<I>(i: I) -> JoinAll<I>$/;"	f
join_multicast_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
keepalive_ms	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn keepalive_ms(&self) -> io::Result<Option<u32>> {$/;"	f
large_skip	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn large_skip() {$/;"	f
lazy	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^pub fn lazy<F, R>(f: F) -> Lazy<F, R>$/;"	f
leave_multicast_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
len	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn len(&self) -> usize {$/;"	f
lift	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        pub fn lift(f: F) -> LiftBind<A, F, E> {$/;"	f
lift	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^mod lift {$/;"	m
lift	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        pub fn lift(f: F) -> LiftBind<A, F, E> {$/;"	f
lift	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^mod lift {$/;"	m
listener	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^fn listener(addr: &SocketAddr,$/;"	f
local_addr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^pub fn local_map() -> LocalMap {$/;"	f
lock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    pub fn lock(self) -> BiLockAcquire<T> {$/;"	f
loop_fn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^pub fn loop_fn<S, T, A, F>(initial_state: S, mut func: F) -> LoopFn<A, F>$/;"	f
lower	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/mod.rs	/^    fn lower(&self) -> &P {$/;"	f
main	/home/orhan/Documents/tokio-sample/src/main.rs	/^fn main() {$/;"	f
map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn map<F, U>(self, f: F) -> Map<Self, F>$/;"	f
map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^    pub fn map<F, U>(self, f: F) -> Async<U>$/;"	f
map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn map<U, F>(self, f: F) -> Map<Self, F>$/;"	f
map_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn map_err<F, E>(self, f: F) -> MapErr<Self, F>$/;"	f
map_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn map_err<U, F>(self, f: F) -> MapErr<Self, F>$/;"	f
max_senders	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn max_senders(&self) -> usize {$/;"	f
merge	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn merge<S>(self, other: S) -> Merge<Self, S>$/;"	f
multicast_loop_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_ttl_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
need_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn need_read(&self) {$/;"	f
need_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn need_write(&self) {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/and_then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> AndThen<A, B, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^pub fn new<F>(future: F) -> CatchUnwind<F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/chain.rs	/^    pub fn new(a: A, c: C) -> Chain<A, B, C> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten.rs	/^pub fn new<A>(future: A) -> Flatten<A>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^pub fn new<F>(f: F) -> FlattenStream<F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/from_err.rs	/^pub fn new<A, E>(future: A) -> FromErr<A, E>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/fuse.rs	/^pub fn new<A: Future>(f: A) -> Fuse<A> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/into_stream.rs	/^pub fn new<F: Future>(future: F) -> IntoStream<F> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map.rs	/^pub fn new<A, F>(future: A, f: F) -> Map<A, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map_err.rs	/^pub fn new<A, F>(future: A, f: F) -> MapErr<A, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/or_else.rs	/^pub fn new<A, B, F>(future: A, f: F) -> OrElse<A, B, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^pub fn new<A, B>(a: A, b: B) -> Select<A, B>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn new() -> Unparker {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    pub fn new(future: F) -> Self {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> Then<A, B, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    pub fn new(t: T) -> Lock<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^pub fn new<S: Sink>(sink: S, amt: usize) -> Buffer<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^pub fn new<S: Sink>(sink: S) -> Flush<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^pub fn new<S: Sink>(sink: S, item: S::SinkItem) -> Send<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^pub fn new<T, U>(sink: T, stream: U) -> SendAll<T, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^pub fn new<S, U, F, Fut>(sink: S, f: F) -> With<S, U, F, Fut>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    pub fn new() -> Stack<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> AndThen<S, F, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^pub fn new<S>(s: S, amt: usize) -> BufferUnordered<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^pub fn new<S>(s: S, amt: usize) -> Buffered<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^pub fn new<S>(stream: S) -> CatchUnwind<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^pub fn new<S1, S2>(s1: S1, s2: S2) -> Chain<S1, S2>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^pub fn new<S>(s: S, capacity: usize) -> Chunks<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^pub fn new<S>(s: S) -> Collect<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^pub fn new<S, F>(s: S, f: F) -> Filter<S, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^pub fn new<S, F, B>(s: S, f: F) -> FilterMap<S, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^pub fn new<S>(s: S) -> Flatten<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^pub fn new<S, F, Fut, T>(s: S, f: F, t: T) -> Fold<S, F, Fut, T>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/for_each.rs	/^pub fn new<S, F, U>(s: S, f: F) -> ForEach<S, F, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^pub fn new<T, U>(stream: T, sink: U) -> Forward<T, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^pub fn new<S: Stream>(s: S) -> Fuse<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/future.rs	/^pub fn new<S: Stream>(s: S) -> StreamFuture<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Map<S, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^pub fn new<S, F, U>(s: S, f: F) -> MapErr<S, F>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Merge<S1, S2>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^pub fn new<S, F, U>(s: S, f: F) -> OrElse<S, F, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^pub fn new<S: Stream>(stream: S) -> Peekable<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/select.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Select<S1, S2>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^pub fn new<S>(s: S, amt: u64) -> Skip<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> SkipWhile<S, P, R>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^pub fn new<S>(s: S, amt: u64) -> Take<S>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> TakeWhile<S, P, R>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Then<S, F, U>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/wait.rs	/^pub fn new<S: Stream>(s: S) -> Wait<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/zip.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Zip<S1, S2>$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    pub fn new(t: T) -> (BiLock<T>, BiLock<T>) {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^    pub fn new() -> Queue<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^    unsafe fn new(v: Option<T>) -> *mut Node<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn new() -> Events {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn new(thread: thread::Thread) -> ThreadUnpark {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn new(set: Arc<EventSet>, id: usize) -> UnparkEvent {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/task_rc.rs	/^    pub fn new(a: A) -> TaskRc<A> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^    pub fn new() -> UnparkMutex<D> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    pub fn new() -> Heap<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn new() -> EasyBuf {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn new(t: T) -> Window<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn new(connected_stream: mio::tcp::TcpStream, handle: &Handle)$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn new(listener: mio::tcp::TcpListener, handle: &Handle)$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^pub fn new<C: UdpCodec>(socket: UdpSocket, codec: C) -> UdpFramed<C> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    fn new(socket: mio::udp::UdpSocket, handle: &Handle) -> io::Result<UdpSocket> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^        fn new() -> Timeline {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    pub fn new(dur: Duration, handle: &Handle) -> io::Result<Interval> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^    pub fn new(source: &mio::Evented, handle: &Handle) -> io::Result<IoToken> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn new() -> io::Result<Core> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn new(io: E, handle: &Handle) -> io::Result<PollEvented<E>> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    pub fn new(dur: Duration, handle: &Handle) -> io::Result<Timeout> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout_token.rs	/^    pub fn new(at: Instant, handle: &Handle) -> io::Result<TimeoutToken> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    pub fn new(sink: S) -> BufferOne<S> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn new(request: Request<T>, deque: FrameDeque<Option<Result<T::BodyOut, T::Error>>>) -> Exchange<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    pub fn new(dispatch: T) -> Multiplex<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    pub fn new(id: RequestId, message: Message<T, B>) -> MultiplexMessage<T, B, E> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    pub fn new(dispatch: T) -> Pipeline<T> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^    pub fn new(protocol: P) -> TcpClient<Kind, P> {$/;"	f
new	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^    pub fn new(protocol: P, addr: SocketAddr) -> TcpServer<Kind, P> {$/;"	f
new_at	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    pub fn new_at(at: Instant, dur: Duration, handle: &Handle)$/;"	f
new_at	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    pub fn new_at(at: Instant, handle: &Handle) -> io::Result<Timeout> {$/;"	f
new_service	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<R> {$/;"	f
new_service	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<S::Instance> {$/;"	f
new_service	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<Self::Instance>;$/;"	f
next	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/wait.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_interval	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^fn next_interval(prev: Instant, now: Instant, interval: Duration) -> Instant {$/;"	f
next_message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn next_message(&mut self) -> Async<Option<T>> {$/;"	f
nodelay	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	f
norm_next	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn norm_next() {$/;"	f
notify	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^    pub fn notify(&self) -> Result<D, ()> {$/;"	f
notify	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn notify(&self, msg: Message) {$/;"	f
notify_handle	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn notify_handle(&self, handle: Task) {$/;"	f
ok	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^pub fn ok<T, E>(t: T) -> FutureResult<T, E> {$/;"	f
once	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/once.rs	/^pub fn once<T, E>(item: Result<T, E>) -> Once<T, E> {$/;"	f
only_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn only_v6(&self) -> io::Result<bool> {$/;"	f
or_else	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn or_else<F, B>(self, f: F) -> OrElse<Self, B, F>$/;"	f
or_else	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn or_else<F, U>(self, f: F) -> OrElse<Self, F, U>$/;"	f
pair	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    pub fn pair() -> (mpsc::Sender<Result<T, E>>, Body<T, E>) {$/;"	f
pair	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^pub fn pair<R, S, E>() -> Pair<R, S, E> {$/;"	f
park	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn park(&mut self, can_park: bool) {$/;"	f
park	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn park(&self) {$/;"	f
park	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub fn park() -> Task {$/;"	f
peek	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    pub fn peek(&mut self) -> Poll<Option<&S::Item>, S::Error> {$/;"	f
peek	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    pub fn peek(&self) -> Option<&T> {$/;"	f
peekable	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn peekable(self) -> Peekable<Self>$/;"	f
peer_addr	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
percolate_down	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn percolate_down(&mut self, mut idx: usize) -> usize {$/;"	f
percolate_up	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn percolate_up(&mut self, mut idx: usize) -> usize {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/and_then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<F::Item, F::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/chain.rs	/^    pub fn poll<F>(&mut self, f: F) -> Poll<B::Item, B::Error>$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/either.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/empty.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/flatten_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/from_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/fuse.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/into_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^            fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^    fn poll(&mut self) -> Result<bool, A::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/lazy.rs	/^    fn poll(&mut self) -> Poll<R::Item, R::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/loop_fn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map.rs	/^    fn poll(&mut self) -> Poll<U, A::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/map_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, U> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error>;$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/option.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/or_else.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/poll_fn.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_ok.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/flush.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::SinkError> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chain.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/collect.rs	/^    fn poll(&mut self) -> Poll<Vec<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/empty.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    fn poll(&mut self) -> Poll<Option<B>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fold.rs	/^    fn poll(&mut self) -> Poll<T, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/for_each.rs	/^    fn poll(&mut self) -> Poll<(), S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/future.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/iter.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    fn poll(&mut self) -> Poll<Option<U>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/merge.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error>;$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/once.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/repeat.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/select.rs	/^    fn poll(&mut self) -> Poll<Option<S1::Item>, S1::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, U::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^    fn poll(&mut self) -> Poll<Option<It>, Fut::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/zip.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    fn poll(&mut self) -> Poll<BiLockAcquired<T>, ()> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn poll(&mut self) -> Poll<Option<T>, ()> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    fn poll(&mut self) -> Poll<T, Canceled> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    fn poll(&mut self) -> Poll<Option<T>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/copy.rs	/^    fn poll(&mut self) -> Poll<u64, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/flush.rs	/^    fn poll(&mut self) -> Poll<A, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn poll(&mut self) -> Poll<Option<C::In>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^    fn poll(&mut self) -> Poll<(R, T, usize), ::std::io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn poll(&mut self) -> Poll<TcpStream, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    fn poll(&mut self) -> Poll<Option<C::In>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    fn poll(&mut self) -> Poll<(UdpSocket, T), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^    fn poll(&mut self) -> Poll<Option<()>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn poll(&mut self, max_wait: Option<Duration>) -> bool {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/server.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/server.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/body.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, Self::Stream, Self::Error>>, io::Error>;$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, B, Self::Error>>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, B, Self::Error>>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn poll(&mut self) -> bool {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>, io::Error>;$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>,$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn poll(&mut self) {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_client.rs	/^    fn poll(&mut self) -> Poll<P::BindClient, io::Error> {$/;"	f
poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/util/client_proxy.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll_cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_cancel	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError>;$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    fn poll_complete(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_fn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/poll_fn.rs	/^pub fn poll_fn<T, E, F>(f: F) -> PollFn<F>$/;"	f
poll_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn poll_future(&mut self, unpark: Arc<Unpark>) -> Poll<F::Item, F::Error> {$/;"	f
poll_lock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    pub fn poll_lock(&self) -> Async<BiLockGuard<T>> {$/;"	f
poll_pending	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    fn poll_pending(&mut self)$/;"	f
poll_pending	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/futures_unordered.rs	/^    fn poll_pending(&mut self, mut drain: Drain<usize>)$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn poll_read(&mut self) -> Async<()>;$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^    pub fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    pub fn poll_ready(&mut self) -> Async<()> {$/;"	f
poll_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn poll_ready(&self) -> Async<()>;$/;"	f
poll_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn poll_ready(&self) -> Async<()> {$/;"	f
poll_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn poll_ready(&self) -> Async<()> {$/;"	f
poll_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn poll_stream(&mut self, unpark: Arc<Unpark>)$/;"	f
poll_unparked	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn poll_unparked(&mut self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn poll_write(&mut self) -> Async<()>;$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^    pub fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^    fn poll_write_body(&mut self, id: RequestId) -> Async<()> {$/;"	f
pop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^    pub unsafe fn pop(&self) -> PopResult<T> {$/;"	f
pop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    pub fn pop(&mut self) -> Option<T> {$/;"	f
pop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn pop(&self) -> Option<T> {$/;"	f
process_out_body_chunk	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn process_out_body_chunk(&mut self, id: RequestId, chunk: Result<Option<T::BodyOut>, T::Error>) {$/;"	f
process_out_body_chunk	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn process_out_body_chunk(&mut self, chunk: T::BodyOut) -> io::Result<()> {$/;"	f
process_out_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn process_out_err(&mut self, id: RequestId, err: T::Error) -> io::Result<()> {$/;"	f
process_out_frame	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn process_out_frame(&mut self,$/;"	f
process_out_frame	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn process_out_frame(&mut self,$/;"	f
process_out_message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn process_out_message(&mut self,$/;"	f
push	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    pub fn push(&self, data: T) {$/;"	f
push	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/queue.rs	/^    pub fn push(&self, t: T) {$/;"	f
push	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    pub fn push(&mut self, t: T) -> Slot {$/;"	f
push	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn push(&self, val: T) {$/;"	f
push_front	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn push_front(&self, val: T) {$/;"	f
queue_push_and_signal	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn queue_push_and_signal(&self, msg: Option<T>) {$/;"	f
read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn read(&mut self) -> Poll<Self::Out, io::Error>;$/;"	f
read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read.rs	/^pub fn read<R, T>(rd: R, buf: T) -> Read<R, T>$/;"	f
read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read_exact	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_exact.rs	/^pub fn read_exact<A, T>(a: A, buf: T) -> ReadExact<A, T>$/;"	f
read_out_frames	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn read_out_frames(&mut self) -> io::Result<()> {$/;"	f
read_out_frames	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn read_out_frames(&mut self) -> io::Result<()> {$/;"	f
read_to_end	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_to_end.rs	/^pub fn read_to_end<A>(a: A, buf: Vec<u8>) -> ReadToEnd<A>$/;"	f
read_until	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/read_until.rs	/^pub fn read_until<A>(a: A, byte: u8, buf: Vec<u8>) -> ReadUntil<A>$/;"	f
recv_dgram	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn recv_dgram<T>(self, buf: T) -> RecvDgram<T>$/;"	f
recv_from	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	f
remote	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn remote(&self) -> &Remote {$/;"	f
remote	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn remote(&self) -> Remote {$/;"	f
remote	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    pub fn remote(&self) -> &Remote {$/;"	f
remove	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn remove(&self, idx: u64) {$/;"	f
remove	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn remove() {$/;"	f
remove	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    pub fn remove(&mut self, slot: Slot) -> T {$/;"	f
repeat	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/repeat.rs	/^pub fn repeat<T, E>(item: T) -> Repeat<T, E>$/;"	f
request_id	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame.rs	/^    pub fn request_id(&self) -> RequestId {$/;"	f
reserve_slot	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn reserve_slot(&mut self) -> Option<&mut Slot<T>> {$/;"	f
reset_flags	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn reset_flags(&mut self) {$/;"	f
reset_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn reset_timeout(&mut self, token: usize, at: Instant) {$/;"	f
reset_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout_token.rs	/^    pub fn reset_timeout(&mut self, at: Instant, handle: &Remote) {$/;"	f
result	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/result.rs	/^pub fn result<T, E>(r: result::Result<T, E>) -> FutureResult<T, E> {$/;"	f
run	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn run(self) {$/;"	f
run	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn run<F>(&mut self, f: F) -> Result<F::Item, F::Error>$/;"	f
schedule	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn schedule(&mut self, token: usize, wake: Task, dir: Direction)$/;"	f
schedule_read	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^    pub fn schedule_read(&self, handle: &Remote) {$/;"	f
schedule_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^    pub fn schedule_write(&self, handle: &Remote) {$/;"	f
select	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn select<B>(self, other: B) -> Select<Self, B::Future>$/;"	f
select	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn select<S>(self, other: S) -> Select<Self, S>$/;"	f
select_all	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_all.rs	/^pub fn select_all<I>(iter: I) -> SelectAll<<I::Item as IntoFuture>::Future>$/;"	f
select_ok	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/select_ok.rs	/^pub fn select_ok<I>(iter: I) -> SelectOk<<I::Item as IntoFuture>::Future>$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn send(self, item: Self::SinkItem) -> Send<Self>$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/channel.rs	/^    pub fn send(self, t: Result<T, E>) -> FutureSender<T, E> {$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    pub fn send(&self, t: T) -> io::Result<()> {$/;"	f
send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn send(&self, msg: Message) {$/;"	f
send_all	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn send_all<S>(self, stream: S) -> SendAll<Self, S>$/;"	f
send_dgram	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn send_dgram<T>(self, buf: T, addr: SocketAddr) -> SendDgram<T>$/;"	f
send_out_chunk	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn send_out_chunk(&mut self, chunk: Result<Option<T::BodyOut>, T::Error>) {$/;"	f
send_to	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr) -> io::Result<usize> {$/;"	f
serve	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^    pub fn serve<S>(&self, new_service: S) where$/;"	f
serve	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^fn serve<P, Kind, F, S>(binder: Arc<P>, addr: SocketAddr, workers: usize, new_service: &F)$/;"	f
set	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^fn set<F, R>(task: &Task, data: &data::LocalMap, f: F) -> R$/;"	f
set_broadcast	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_end	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn set_end(&mut self, end: usize) -> &mut EasyBuf {$/;"	f
set_end	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn set_end(&mut self, end: usize) -> &mut Window<T> {$/;"	f
set_expect_response	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn set_expect_response(&mut self, solo: bool) {$/;"	f
set_keepalive_ms	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn set_keepalive_ms(&self, keepalive: Option<u32>) -> io::Result<()> {$/;"	f
set_multicast_loop_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_nodelay	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	f
set_only_v6	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn set_only_v6(&self, only_v6: bool) -> io::Result<()> {$/;"	f
set_start	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn set_start(&mut self, start: usize) -> &mut EasyBuf {$/;"	f
set_start	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn set_start(&mut self, start: usize) -> &mut Window<T> {$/;"	f
set_ttl	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
shared	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn shared(self) -> Shared<Self>$/;"	f
shutdown	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	f
signal	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn signal(&self) {$/;"	f
simple	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^    fn simple() {$/;"	f
simple	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn simple() {$/;"	f
simple2	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn simple2() {$/;"	f
sink_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    fn sink_mut(&mut self) -> &mut S {$/;"	f
sink_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    fn sink_mut(&mut self) -> &mut T {$/;"	f
sink_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    fn sink_mut(&mut self) -> &mut U {$/;"	f
skip	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn skip(self, amt: u64) -> Skip<Self>$/;"	f
skip_while	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn skip_while<P, R>(self, pred: P) -> SkipWhile<Self, P, R>$/;"	f
smoke	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    fn smoke() {$/;"	f
spawn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub fn spawn<T>(obj: T) -> Spawn<T> {$/;"	f
spawn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn spawn(&mut self, future: Box<Future<Item=(), Error=()>>) {$/;"	f
spawn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn spawn<F, R>(&self, f: F)$/;"	f
spawn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn spawn<F>(&self, f: F)$/;"	f
spawn_fn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn spawn_fn<F, R>(&self, f: F)$/;"	f
split	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn split(self) -> (SplitSink<Self>, SplitStream<Self>)$/;"	f
split	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^pub fn split<S: Stream + Sink>(s: S) -> (SplitSink<S>, SplitStream<S>) {$/;"	f
split	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn split(self) -> (ReadHalf<Self>, WriteHalf<Self>)$/;"	f
split	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^pub fn split<T: Io>(t: T) -> (ReadHalf<T>, WriteHalf<T>) {$/;"	f
split_off	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn split_off(&mut self, at: usize) -> EasyBuf {$/;"	f
start	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/window.rs	/^    pub fn start(&self) -> usize {$/;"	f
start_poll	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn start_poll(&self) {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^        fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/with.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Fut::Error> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/and_then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffer_unordered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/buffered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/filter_map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/flatten.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/fuse.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/map_err.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/or_else.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/peek.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/skip_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/split.rs	/^    fn start_send(&mut self, item: S::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/take_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/channel.rs	/^    fn start_send(&mut self, t: T) -> StartSend<T, io::Error> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    fn start_send(&mut self, item: C::Out) -> StartSend<C::Out, io::Error> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/frame.rs	/^    fn start_send(&mut self, item: C::Out) -> StartSend<C::Out, io::Error> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/multiplex/mod.rs	/^        fn start_send(&mut self, request: Self::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/simple/pipeline/mod.rs	/^        fn start_send(&mut self, request: Self::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
stream_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    fn stream_mut(&mut self) -> &mut Fuse<U> {$/;"	f
stream_mut	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    fn stream_mut(&mut self) -> &mut Fuse<T> {$/;"	f
sys	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^mod sys {$/;"	m
sys	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^mod sys {$/;"	m
take	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/join.rs	/^    fn take(&mut self) -> A::Item {$/;"	f
take	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/chunks.rs	/^    fn take(&mut self) -> Vec<S::Item> {$/;"	f
take	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn take(self, amt: u64) -> Take<Self>$/;"	f
take_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/message.rs	/^    pub fn take_body(&mut self) -> Option<B> {$/;"	f
take_buffered_out_request	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn take_buffered_out_request(&mut self) -> Option<Message<T::Out, Body<T::BodyOut, T::Error>>> {$/;"	f
take_readiness	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/io_token.rs	/^    pub fn take_readiness(&self) -> usize {$/;"	f
take_result	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_result	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_sink	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send.rs	/^    fn take_sink(&mut self) -> S {$/;"	f
take_while	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn take_while<P, R>(self, pred: P) -> TakeWhile<Self, P, R>$/;"	f
task_local	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^macro_rules! task_local {$/;"	d
test	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/interval.rs	/^mod test {$/;"	m
test	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^mod test {$/;"	m
test_attempting_allocation_past_capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn test_attempting_allocation_past_capacity() {$/;"	f
test_capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn test_capacity() {$/;"	f
test_empty_peek	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn test_empty_peek() {$/;"	f
test_empty_pop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn test_empty_pop() {$/;"	f
test_growing_buffer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn test_growing_buffer() {$/;"	f
test_multiple_deque	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn test_multiple_deque() {$/;"	f
test_peek_and_pop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn test_peek_and_pop() {$/;"	f
test_push	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn test_push() {$/;"	f
test_reusing	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn test_reusing() {$/;"	f
test_to_vec	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn test_to_vec() {$/;"	f
tests	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^mod tests {$/;"	m
tests	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stack.rs	/^mod tests {$/;"	m
tests	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^mod tests {$/;"	m
tests	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^mod tests {$/;"	m
then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn then<F, B>(self, f: F) -> Then<Self, B, F>$/;"	f
then	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn then<F, U>(self, f: F) -> Then<Self, F, U>$/;"	f
threads	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^    pub fn threads(&mut self, threads: usize) {$/;"	f
tick	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/mod.rs	/^    fn tick(&mut self) {}$/;"	f
tick	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/mod.rs	/^    fn tick(&mut self) {}$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn transport(&mut self) -> &mut Self::Transport;$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/client.rs	/^    fn transport(&mut self) -> &mut Self::Transport {$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn transport(&mut self) -> &mut P::Transport {$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn transport(&mut self) -> &mut Self::Transport;$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/client.rs	/^    fn transport(&mut self) -> &mut Self::Transport {$/;"	f
transport	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/server.rs	/^    fn transport(&mut self) -> &mut P::Transport {$/;"	f
transport_not_write_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn transport_not_write_ready(&mut self) {$/;"	f
trigger	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn trigger(&self) {$/;"	f
try_empty_buffer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/buffer.rs	/^    fn try_empty_buffer(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_empty_buffer	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/buffer_one.rs	/^    fn try_empty_buffer(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_lock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/lock.rs	/^    pub fn try_lock(&self) -> Option<TryLock<T>> {$/;"	f
try_nb	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^macro_rules! try_nb {$/;"	d
try_park	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn try_park(&self) -> TryPark {$/;"	f
try_poll_in_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn try_poll_in_body(&mut self) -> Poll<Option<T::BodyIn>, T::Error> {$/;"	f
try_ready	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/poll.rs	/^macro_rules! try_ready {$/;"	d
try_start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/send_all.rs	/^    fn try_start_send(&mut self, item: U::Item) -> Poll<(), T::SinkError> {$/;"	f
try_start_send	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/forward.rs	/^    fn try_start_send(&mut self, item: T::Item) -> Poll<(), U::SinkError> {$/;"	f
ttl	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/udp/mod.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
turn	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    pub fn turn(&mut self, max_wait: Option<Duration>) {$/;"	f
unbounded	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unbounded	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/unsync/mpsc.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unfold	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/unfold.rs	/^pub fn unfold<T, F, Fut, It>(init: T, f: F) -> Unfold<T, F, Fut>$/;"	f
unlock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    fn unlock(&self) {$/;"	f
unlock	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/bilock.rs	/^    pub fn unlock(self) -> BiLock<T> {$/;"	f
unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/shared.rs	/^    fn unpark(&self) {$/;"	f
unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn unpark(&self) {$/;"	f
unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn unpark(&self);$/;"	f
unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn unpark(&self) {$/;"	f
unpark	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn unpark(&self) {$/;"	f
unpark_one	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sync/mpsc/mod.rs	/^    fn unpark_one(&mut self) {$/;"	f
unwrap_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_body(self) -> Option<B> {$/;"	f
unwrap_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_body(self) -> Option<B> {$/;"	f
unwrap_done	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/server.rs	/^    fn unwrap_done(self) -> Result<F::Item, F::Error> {$/;"	f
unwrap_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_err(self) -> E {$/;"	f
unwrap_err	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_err(self) -> E {$/;"	f
unwrap_msg	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_msg(self) -> T {$/;"	f
unwrap_msg	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_msg(self) -> T {$/;"	f
update_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn update_timeout(&mut self, token: usize, handle: Task) -> Option<Task> {$/;"	f
update_timeout	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/timeout_token.rs	/^    pub fn update_timeout(&self, handle: &Remote) {$/;"	f
vec2heap	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/heap.rs	/^    fn vec2heap<T: Ord>(v: Vec<T>) -> Heap<T> {$/;"	f
wait	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/future/mod.rs	/^    fn wait(self) -> result::Result<Self::Item, Self::Error>$/;"	f
wait	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn wait(self) -> Wait<Self>$/;"	f
wait	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn wait(&self, data: D) -> Result<(), D> {$/;"	f
wait_future	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn wait_future(&mut self) -> Result<F::Item, F::Error> {$/;"	f
wait_stream	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    pub fn wait_stream(&mut self) -> Option<Result<S::Item, S::Error>> {$/;"	f
with	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn with<U, F, Fut>(self, f: F) -> With<Self, U, F, Fut>$/;"	f
with	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^    pub fn with<F, R>(&'static self, f: F) -> R$/;"	f
with	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^fn with<F: FnOnce(&Task, &data::LocalMap) -> R, R>(f: F) -> R {$/;"	f
with	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/task_rc.rs	/^    pub fn with<F, R>(&self, f: F) -> R$/;"	f
with_capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/frame.rs	/^    pub fn with_capacity(cap: usize) -> EasyBuf {$/;"	f
with_capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    fn with_capacity(mut capacity: usize) -> Inner<T> {$/;"	f
with_capacity	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/frame_buf.rs	/^    pub fn with_capacity(capacity: usize) -> FrameBuf<T> {$/;"	f
with_event	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^    fn with_event(&self, event: UnparkEvent) -> Events {$/;"	f
with_filter	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn with_filter<F>(self, f: F) -> WithFilter<Self, F>$/;"	f
with_filter_map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn with_filter_map<U, F>(self, f: F) -> WithFilterMap<Self, U, F>$/;"	f
with_handle	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/tcp_server.rs	/^    pub fn with_handle<F, S>(&self, new_service: F) where$/;"	f
with_loop	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/mod.rs	/^    fn with_loop<F, R>(&self, f: F) -> R$/;"	f
with_map	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/sink/mod.rs	/^    fn with_map<U, F>(self, f: F) -> WithMap<Self, U, F>$/;"	f
with_unpark_event	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/mod.rs	/^pub fn with_unpark_event<F, R>(event: UnparkEvent, f: F) -> R$/;"	f
write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^    fn write(&mut self, _bytes: &[u8]) {$/;"	f
write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/mod.rs	/^    fn write(&mut self, req: Self::In) -> Poll<(), io::Error>;$/;"	f
write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/split.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/net/tcp.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/reactor/poll_evented.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_all	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^pub fn write_all<A, T>(a: A, buf: T) -> WriteAll<A, T>$/;"	f
write_in_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn write_in_body(&mut self) -> io::Result<()> {$/;"	f
write_in_body	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn write_in_body(&mut self) -> io::Result<bool> {$/;"	f
write_in_error	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn write_in_error(&mut self,$/;"	f
write_in_frames	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn write_in_frames(&mut self) -> io::Result<()> {$/;"	f
write_in_frames	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn write_in_frames(&mut self) -> io::Result<()> {$/;"	f
write_in_message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn write_in_message(&mut self,$/;"	f
write_in_message	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/pipeline/advanced.rs	/^    fn write_in_message(&mut self, message: Result<Message<T::In, T::Stream>, T::Error>) -> io::Result<()> {$/;"	f
write_in_messages	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn write_in_messages(&mut self) -> io::Result<()> {$/;"	f
write_u64	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/task_impl/data.rs	/^    fn write_u64(&mut self, u: u64) {$/;"	f
wrote_frame	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.0/src/streaming/multiplex/advanced.rs	/^    fn wrote_frame(&mut self) {$/;"	f
zero_write	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.4/src/io/write_all.rs	/^fn zero_write() -> io::Error {$/;"	f
zip	/home/orhan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.10/src/stream/mod.rs	/^    fn zip<S>(self, other: S) -> Zip<Self, S>$/;"	f
